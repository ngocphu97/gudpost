{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/components/index.ts","webpack:///./src/app/auth/components/login-form/login-form.component.html","webpack:///./src/app/auth/components/login-form/login-form.component.scss","webpack:///./src/app/auth/components/login-form/login-form.component.ts","webpack:///./src/app/auth/containers/index.ts","webpack:///./src/app/auth/containers/login-page/login-page.component.html","webpack:///./src/app/auth/containers/login-page/login-page.component.scss","webpack:///./src/app/auth/containers/login-page/login-page.component.ts","webpack:///./src/app/auth/services/login.service.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './containers';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { containers } from './containers';\nimport { components } from './components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    containers,\n    components\n  ]\n})\nexport class AuthModule { }\n","import { LoginFormComponent } from './login-form/login-form.component';\r\n\r\nexport {\r\n    LoginFormComponent\r\n};\r\n\r\nexport const components = [\r\n    LoginFormComponent\r\n];\r\n","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n  <h2 class=\\\"text-secondary text-center\\\">Login</h2>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputGudpostEmail\\\">Email</label>\\n    <input #inputGudpostEmail type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputGudpostEmail\\\" placeholder=\\\"Enter email ...\\\"\\n      formControlName=\\\"username\\\" [class.is-invalid]=\\\"isFieldInvalid('username')\\\" required>\\n    <div class=\\\"invalid-feedback\\\">\\n      Not valid email!\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputGudpostPassword\\\">Password</label>\\n    <input #inputGudpostPassword type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputGudpostPassword\\\" placeholder=\\\"Enter Password ...\\\"\\n      formControlName=\\\"password\\\" required>\\n  </div>\\n\\n  <div class=\\\"form-group text-right clearfix custom-control custom-checkbox\\\" (click)=\\\"onCheckRememberMe()\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\" formControlName=\\\"rememberMe\\\" >\\n    <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Remember me</label>\\n  </div>\\n\\n  <div class=\\\"form-group d-flex justify-content-between\\\">\\n    <button class=\\\"btn btn-primary  btn-login-action mr-2\\\">Sign Up</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-yellow btn-login-action  mr-2\\\">Login</button>\\n    <button class=\\\"btn btn-primary btn-darker-blue btn-login-action\\\" type=\\\"button\\\" (click)=\\\"loginFacebook()\\\">\\n      <i class=\\\"fab fa-facebook-f\\\"></i>\\n    </button>\\n  </div>\\n\\n</form>\"","module.exports = \".btn-login-action {\\n  width: 150px; }\\n\\n.custom-control-label:hover {\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb21wb25lbnRzL2xvZ2luLWZvcm0vRDpcXFByb2plY3RzXFxnai13b3JrZmxvdy9zcmNcXGFwcFxcYXV0aFxcY29tcG9uZW50c1xcbG9naW4tZm9ybVxcbG9naW4tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVksRUFBQTs7QUFHZDtFQUVJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGgvY29tcG9uZW50cy9sb2dpbi1mb3JtL2xvZ2luLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWxvZ2luLWFjdGlvbiB7XHJcbiAgd2lkdGg6IDE1MHB4O1xyXG59XHJcblxyXG4uY3VzdG9tLWNvbnRyb2wtbGFiZWwge1xyXG4gICY6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ILoginUser } from '../../models/login-user.model';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent {\n\n  loginForm: FormGroup;\n  hasErrors = false;\n  @Output() rememberMe = new EventEmitter(false);\n  @Output() loginUser = new EventEmitter();\n  @Output() loginWithFacebook = new EventEmitter(false);\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.loginForm = this.formBuilder.group(\n      {\n        username: ['admin@gudpost.net', [Validators.required, Validators.email]],\n        password: ['admingudpost123', Validators.required],\n        rememberMe: [false],\n      }\n    );\n  }\n\n  onCheckRememberMe() {\n    this.loginForm.patchValue({\n      rememberMe: true\n    });\n  }\n\n  isFieldInvalid(fieldName: string): boolean {\n    const control = this.loginForm.get(fieldName);\n    return control.invalid && control.touched;\n  }\n\n  isFormValid() {\n    if (this.loginForm.invalid) {\n      const controls = this.loginForm.controls;\n      Object.keys(controls)\n        .forEach(controlName => controls[controlName].markAsTouched());\n      this.hasErrors = true;\n      return false;\n    }\n    this.hasErrors = false;\n    return true;\n  }\n\n  submit() {\n    if (this.isFormValid()) {\n\n      const user: ILoginUser = {\n        username: this.loginForm.value.username,\n        password: this.loginForm.value.password,\n        rememberMe: this.loginForm.value.rememberMe\n      };\n\n      this.loginUser.emit(user);\n    }\n  }\n\n  loginFacebook() {\n    this.loginWithFacebook.emit(true);\n  }\n}\n","import { LoginPageComponent } from './login-page/login-page.component';\r\n\r\nexport {\r\n    LoginPageComponent\r\n};\r\n\r\nexport const containers = [\r\n    LoginPageComponent\r\n];\r\n","module.exports = \"<div class=\\\"container mx-auto login-form\\\">\\n  <div class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"hasErrors\\\">\\n    <p>\\n      Wrong Email or Password, check again please !\\n    </p>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onDismissAlert()\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"d-flex justify-content-center mb-4\\\">\\n    <img src=\\\"assets/logo/GUDPOST-2.png\\\" class=\\\"img-fluid w-75\\\" alt=\\\"\\\">\\n  </div>\\n\\n  <app-login-form \\n    (loginWithFacebook)=\\\"loginWithFacebook($event)\\\"\\n    (loginUser)=\\\"submit($event)\\\" >\\n  </app-login-form>\\n\\n  <hr>\\n\\n  <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-light text-secondary\\\">Forgot password</button>\\n  </div>\\n\\n  <button (click)=\\\"testJsonServer()\\\">Test</button>\\n</div>\\n\"","module.exports = \".login-form {\\n  width: 500px;\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2xvZ2luLXBhZ2UvRDpcXFByb2plY3RzXFxnai13b3JrZmxvdy9zcmNcXGFwcFxcYXV0aFxcY29udGFpbmVyc1xcbG9naW4tcGFnZVxcbG9naW4tcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsU0FBUztFQUNULFFBQVE7RUFDUix3Q0FBZ0M7VUFBaEMsZ0NBQWdDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2NvbnRhaW5lcnMvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZvcm0ge1xyXG4gICAgd2lkdGg6IDUwMHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICB9XHJcbiAgIl19 */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { ILoginUser } from '../../models/login-user.model';\nimport { LoginService } from '../../services/login.service';\n\ndeclare const FB: any;\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent {\n\n  loginForm: FormGroup;\n  hasErrors: boolean;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private loginService: LoginService\n  ) {\n    this.loginForm = this.formBuilder.group(\n      {\n        username: [undefined, [Validators.required, Validators.email]],\n        password: [undefined, Validators.required],\n        rememberMe: [''],\n      }\n    );\n  }\n\n  submit(user: ILoginUser) {\n    if (this.isValidUser(user)) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  isValidUser(user: ILoginUser): boolean {\n    const validUser = {\n      username: 'admin@gudpost.net',\n      password: 'admingudpost123'\n    };\n    if (validUser.username !== user.username\n      || validUser.password !== user.password) {\n      this.hasErrors = true;\n      return false;\n    }\n    return true;\n  }\n\n  loginWithFacebook(loginSignal: boolean) {\n    if (loginSignal) {\n      this.loginService.loginFacebook().pipe()\n        .subscribe(() => {\n          this.router.navigate(['/home']);\n        });\n    }\n  }\n\n  logout() {\n    this.loginService.logOutFacebook().subscribe(res => console.log(res));\n  }\n\n  onDismissAlert() {\n    this.hasErrors = undefined;\n  }\n\n  testJsonServer() {\n    this.loginService.testJsonServer();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\ndeclare const FB: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  loginFacebook(): Observable<any> {\n    return Observable.create((observer) => {\n      FB.login((response: any) => {\n        this.getLongLiveToken(response.authResponse.accessToken).pipe()\n          .subscribe(longLiveToken => {\n            this.setLocalStorage(longLiveToken);\n            observer.next(longLiveToken);\n          });\n      });\n    });\n  }\n\n  setLocalStorage(authResponse) {\n    localStorage.setItem('GPLoginUser', JSON.stringify(authResponse));\n  }\n\n  getLongLiveToken(accessToken: string): Observable<any> {\n    // tslint:disable-next-line: max-line-length\n    const urlExchangeLongLivedToken = `https://graph.facebook.com/oauth/access_token?grant_type=fb_exchange_token&client_id=933021606869470&client_secret=b086a2a1ac36c03154cc48354575bdaa&fb_exchange_token=${accessToken}`;\n\n    return this.http.get(urlExchangeLongLivedToken);\n  }\n\n  logOutFacebook(): Observable<any> {\n    return Observable.create((observer) => {\n      FB.logout((response: any) => {\n        observer.next(response);\n      });\n    });\n  }\n\n  testJsonServer() {\n    this.http.get(`${environment.mockServerURL}/posts`).subscribe(d => console.log(d));\n  }\n}\n"],"sourceRoot":""}